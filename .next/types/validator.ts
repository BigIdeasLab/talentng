// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../app/complete-profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/complete-profile">> = Specific
  const handler = {} as typeof import("../../app/complete-profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/forgot-password-confirmation/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forgot-password-confirmation">> = Specific
  const handler = {} as typeof import("../../app/forgot-password-confirmation/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/forgot-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forgot-password">> = Specific
  const handler = {} as typeof import("../../app/forgot-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/job-detail/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/job-detail">> = Specific
  const handler = {} as typeof import("../../app/job-detail/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/learning-hub/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/learning-hub">> = Specific
  const handler = {} as typeof import("../../app/learning-hub/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/mentor-detail/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/mentor-detail">> = Specific
  const handler = {} as typeof import("../../app/mentor-detail/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/mentorship/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/mentorship">> = Specific
  const handler = {} as typeof import("../../app/mentorship/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/my-profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/my-profile">> = Specific
  const handler = {} as typeof import("../../app/my-profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/opportunities/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/opportunities">> = Specific
  const handler = {} as typeof import("../../app/opportunities/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/reset-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reset-password">> = Specific
  const handler = {} as typeof import("../../app/reset-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/signup">> = Specific
  const handler = {} as typeof import("../../app/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../app/dashboard/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/job-detail/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/job-detail">> = Specific
  const handler = {} as typeof import("../../app/job-detail/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/learning-hub/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/learning-hub">> = Specific
  const handler = {} as typeof import("../../app/learning-hub/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/mentor-detail/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/mentor-detail">> = Specific
  const handler = {} as typeof import("../../app/mentor-detail/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/mentorship/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/mentorship">> = Specific
  const handler = {} as typeof import("../../app/mentorship/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/my-profile/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/my-profile">> = Specific
  const handler = {} as typeof import("../../app/my-profile/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/opportunities/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/opportunities">> = Specific
  const handler = {} as typeof import("../../app/opportunities/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/settings/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
